When would you want to create a remote repository rather than keeping all your
work local?
     To collaborate with other people on a project. When you want to share your
     code with someone, even if they just want to see the code and not
     contribute to it.  To be able to edit code from multiple computers and
     keep the code up-to-date on all the computers. Also, remotes can be a good
     way to keep a backup of your work.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    So that you can anticipate any changes to the code. For example, if new code
    in the remote repo has any problems, then you might not want to pull those
    changes until the problems are resolved.

Describe the differences between forks, clones, and branches. When would you
use one instead of another?

    Branches, forks, and clones are ways to add new changes without
    altering the original version. Branches are the new changes added in
    the same repo. Forking and cloning both copy an entire repo to
    a new location. Forking is copying a repo only within Github, and it's
    Github's creation. You can only fork a GitHub repo to another place on
    GitHub, while you can clone any Git repo to any 'local' machine.

    I would use branching for most cases where I want to add new changes to a
    repo while keeping an easy reference to a previous version, especially
    when collaborating with others. I would clone a repo on GitHub when I
    want to work on that repo on my local machine rather than using their
    website.  I would fork a repo on GitHub when I want to make public changes
    to that repo, but I don't have permission to alter the original version
    yet.

What is the benefit of having a copy of the last known state of the remote
stored locally?

  If you want to work offline, like when you're getting on a plane, than
  pulling the last state locally would be a good idea. You can look and work
  on those new changes, and you can choose whether or not to merge those changes
  onto your local branches. You have easy access to the remote version this way,
  and there are plenty of things you can do while offline, like merging.

How would you collaborate without using Git or GitHub? What would be easier,
and what would be harder?

  uhh, I think it would be a trillion dollar headache to collaborate without git.
  But, sure, you can use a shared folder on Dropbox, but problems arise when
  trying to combine changes. Google docs would be okay, if it existed for code.
  However, problems would arise if working on the same file simultaneously, as
  multiple changes could compound into bugs and go unnoticed.   
